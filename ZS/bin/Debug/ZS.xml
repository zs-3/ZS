<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ZS</name>
    </assembly>
    <members>
        <member name="T:ZS.ZSCmd">
            <summary>
            Provides methods to execute command line instructions from Small Basic.
            </summary>
        </member>
        <member name="M:ZS.ZSCmd.Execute(Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Executes a command in the command line and returns the output.
            </summary>
            <param name="command">The command to execute.</param>
            <returns>The output of the command execution.</returns>
        </member>
        <member name="M:ZS.ZSCmd.CopyFile(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Copies a file from source to destination using command line.
            </summary>
            <param name="source">Source file path.</param>
            <param name="destination">Destination file path.</param>
            <returns>Output of the command execution.</returns>
        </member>
        <member name="M:ZS.ZSCmd.MoveFile(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Moves a file from source to destination using command line.
            </summary>
            <param name="source">Source file path.</param>
            <param name="destination">Destination file path.</param>
            <returns>Output of the command execution.</returns>
        </member>
        <member name="M:ZS.ZSCmd.DeleteFile(Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Deletes a file using command line.
            </summary>
            <param name="filePath">File path to delete.</param>
            <returns>Output of the command execution.</returns>
        </member>
        <member name="M:ZS.ZSCmd.Rename(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Renames a file or directory using command line.
            </summary>
            <param name="oldPath">Current path of the file or directory.</param>
            <param name="newPath">New path to rename to.</param>
            <returns>Output of the command execution.</returns>
        </member>
        <member name="M:ZS.ZSCmd.CreateDirectory(Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Creates a directory using command line.
            </summary>
            <param name="directoryPath">Directory path to create.</param>
            <returns>Output of the command execution.</returns>
        </member>
        <member name="M:ZS.ZSCmd.RemoveDirectory(Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Removes a directory using command line.
            </summary>
            <param name="directoryPath">Directory path to remove.</param>
            <returns>Output of the command execution.</returns>
        </member>
        <member name="M:ZS.ZSCmd.ListDirectoryContents(Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Lists contents of a directory using command line.
            </summary>
            <param name="directoryPath">Directory path to list.</param>
            <returns>Output of the command execution.</returns>
        </member>
        <member name="M:ZS.ZSCmd.ChangeDirectory(Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Changes current directory using command line.
            </summary>
            <param name="directoryPath">Directory path to change to.</param>
            <returns>Output of the command execution.</returns>
        </member>
        <member name="M:ZS.ZSCmd.PingHost(Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Pings a host using command line.
            </summary>
            <param name="host">Host to ping.</param>
            <returns>Output of the command execution.</returns>
        </member>
        <member name="M:ZS.ZSCmd.ExecuteCommand(System.String)">
            <summary>
            Executes a command using the command line and captures the output.
            </summary>
            <param name="command">The command to execute.</param>
            <returns>The output of the command execution.</returns>
        </member>
        <member name="T:ZS.ZSKeyboard">
            <summary>
            The ZSKeyboard extension provides functionalities to interact with keyboard inputs.
            It includes methods for checking the state of modifier keys (Alt, Shift, Ctrl, Windows) and sending key presses programmatically.
            </summary>
        </member>
        <member name="M:ZS.ZSKeyboard.IsAltDown">
            <summary>
            Checks if the Alt key is currently pressed down.
            </summary>
            <returns>True if the Alt key is pressed, otherwise false.</returns>
        </member>
        <member name="M:ZS.ZSKeyboard.IsShiftDown">
            <summary>
            Checks if the Shift key is currently pressed down.
            </summary>
            <returns>True if the Shift key is pressed, otherwise false.</returns>
        </member>
        <member name="M:ZS.ZSKeyboard.IsCtrlDown">
            <summary>
            Checks if the Ctrl key is currently pressed down.
            </summary>
            <returns>True if the Ctrl key is pressed, otherwise false.</returns>
        </member>
        <member name="M:ZS.ZSKeyboard.IsWindowsKeyDown">
            <summary>
            Checks if the Windows key is currently pressed down.
            </summary>
            <returns>True if the Windows key is pressed, otherwise false.</returns>
        </member>
        <member name="M:ZS.ZSKeyboard.SendKey(Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Sends a key press to the system.
            </summary>
            <param name="key">The key to send.</param>
        </member>
        <member name="M:ZS.ZSKeyboard.ToggleCapsLock">
            <summary>
            Toggles the state of the Caps Lock key.
            </summary>
        </member>
        <member name="M:ZS.ZSKeyboard.SendKeyCombination(Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Simulates pressing a combination of keys.
            </summary>
            <param name="keyCombination">The key combination to press (e.g., "^C" for Ctrl+C, "%{F4}" for Alt+F4).</param>
            <example>
            "^C" = Ctrl+C
            "%F4" = Alt+F4
            "+A" = Shift+A
            "{DEL}" = Delete key
            "{ENTER}" = Enter key
            "{TAB}" = Tab key
            "{ESC}" = Escape key
            "{BACKSPACE}" = Backspace key
            </example>
        </member>
        <member name="M:ZS.ZSKeyboard.IsCapsLockOn">
            <summary>
            Checks if the Caps Lock is currently on.
            </summary>
            <returns>True if Caps Lock is on, otherwise false.</returns>
        </member>
        <member name="M:ZS.ZSKeyboard.IsNumLockOn">
            <summary>
            Checks if the Num Lock is currently on.
            </summary>
            <returns>True if Num Lock is on, otherwise false.</returns>
        </member>
        <member name="M:ZS.ZSKeyboard.IsScrollLockOn">
            <summary>
            Checks if the Scroll Lock is currently on.
            </summary>
            <returns>True if Scroll Lock is on, otherwise false.</returns>
        </member>
        <member name="M:ZS.ZSKeyboard.TypeText(Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Simulates typing a string of text.
            </summary>
            <param name="text">The text to type.</param>
        </member>
        <member name="M:ZS.ZSKeyboard.SetKeyboardLayout(Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Sets the keyboard layout.
            </summary>
            <param name="layout">The keyboard layout (e.g., "00000409" for US layout).</param>
        </member>
        <member name="M:ZS.ZSKeyboard.SimulateKeyDown(Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Simulates pressing down a key.
            </summary>
            <param name="key">The key to press down.</param>
        </member>
        <member name="M:ZS.ZSKeyboard.SimulateKeyUp(Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Simulates releasing a key.
            </summary>
            <param name="key">The key to release.</param>
        </member>
        <member name="M:ZS.ZSKeyboard.Wait(Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Waits for a specified amount of time.
            </summary>
            <param name="milliseconds">The amount of time to wait in milliseconds.</param>
        </member>
        <member name="M:ZS.ZSKeyboard.PressAndReleaseKey(Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Simulates pressing and releasing a key.
            </summary>
            <param name="key">The key to press and release.</param>
        </member>
        <member name="M:ZS.ZSKeyboard.PressKeyMultipleTimes(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Simulates pressing a key multiple times.
            </summary>
            <param name="key">The key to press.</param>
            <param name="times">The number of times to press the key.</param>
        </member>
        <member name="M:ZS.ZSKeyboard.SimulateEnterKeyPress">
            <summary>
            Simulates pressing the Enter key.
            </summary>
        </member>
        <member name="M:ZS.ZSKeyboard.SimulateEscapeKeyPress">
            <summary>
            Simulates pressing the Escape key.
            </summary>
        </member>
        <member name="M:ZS.ZSKeyboard.SimulateTabKeyPress">
            <summary>
            Simulates pressing the Tab key.
            </summary>
        </member>
        <member name="M:ZS.ZSKeyboard.SimulateBackspaceKeyPress">
            <summary>
            Simulates pressing the Backspace key.
            </summary>
        </member>
        <member name="M:ZS.ZSKeyboard.SimulateDeleteKeyPress">
            <summary>
            Simulates pressing the Delete key.
            </summary>
        </member>
        <member name="M:ZS.ZSKeyboard.GetKeyState(Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Gets the current state of a specified key.
            </summary>
            <param name="key">The key to check the state for (e.g., "A", "B", "1", "2").</param>
            <returns>True if the key is pressed, otherwise false.</returns>
        </member>
        <member name="M:ZS.ZSKeyboard.GetKeyboardLayout">
            <summary>
            Retrieves the current keyboard layout.
            </summary>
            <returns>The current keyboard layout as a string.</returns>
        </member>
        <member name="M:ZS.ZSKeyboard.GetActiveKeyboardLayoutLanguage">
            <summary>
            Retrieves the language of the active keyboard layout.
            </summary>
            <returns>The language of the active keyboard layout as a string.</returns>
        </member>
        <member name="M:ZS.ZSKeyboard.GetKeyboardState">
            <summary>
            Retrieves the current state of all keyboard keys.
            </summary>
            <returns>An array of booleans indicating the state of each key.</returns>
        </member>
        <member name="M:ZS.ZSKeyboard.GetActiveKeyboardLayoutId">
            <summary>
            Retrieves the identifier of the active keyboard layout.
            </summary>
            <returns>The identifier of the active keyboard layout as an integer.</returns>
        </member>
        <member name="M:ZS.ZSKeyboard.GetCurrentKeyboardLayoutLanguageCode">
            <summary>
            Retrieves the language code (LCID) of the current keyboard layout.
            </summary>
            <returns>The language code (LCID) of the current keyboard layout.</returns>
        </member>
        <member name="M:ZS.ZSKeyboard.ClearLastKeyPressed">
            <summary>
            Clears the last recorded key press.
            </summary>
        </member>
        <member name="M:ZS.ZSKeyboard.GetKeyboardLayoutsCount">
            <summary>
            Retrieves the number of installed keyboard layouts.
            </summary>
            <returns>The number of installed keyboard layouts.</returns>
        </member>
        <member name="M:ZS.ZSKeyboard.GetCurrentKeyboardLayoutId">
            <summary>
            Retrieves the identifier (HKL) of the current keyboard layout.
            </summary>
            <returns>The identifier (HKL) of the current keyboard layout.</returns>
        </member>
        <member name="P:ZS.ZSKeyboard.LastKeyPressed">
            <summary>
            Gets the last key pressed by the user.
            </summary>
        </member>
        <member name="T:ZS.ZSText">
            <summary>
            Provides a comprehensive set of text manipulation functions, enhancing the capability of Small Basic programs to process and transform strings with ease.
            </summary>
        </member>
        <member name="M:ZS.ZSText.ToUpper(Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Converts the input text to uppercase.
            </summary>
            <param name="input">The text to be converted.</param>
            <returns>The uppercase version of the input text.</returns>
        </member>
        <member name="M:ZS.ZSText.ToLower(Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Converts the input text to lowercase.
            </summary>
            <param name="input">The text to be converted.</param>
            <returns>The lowercase version of the input text.</returns>
        </member>
        <member name="M:ZS.ZSText.Substring(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Extracts a substring from the input text.
            </summary>
            <param name="input">The text to extract from.</param>
            <param name="startIndex">The starting index of the substring.</param>
            <param name="length">The length of the substring.</param>
            <returns>The extracted substring.</returns>
        </member>
        <member name="M:ZS.ZSText.Contains(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Checks if the input text contains the specified value.
            </summary>
            <param name="input">The text to search in.</param>
            <param name="value">The value to search for.</param>
            <returns>True if the input text contains the value, otherwise false.</returns>
        </member>
        <member name="M:ZS.ZSText.IndexOf(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Finds the index of the specified value in the input text.
            </summary>
            <param name="input">The text to search in.</param>
            <param name="value">The value to find.</param>
            <returns>The index of the value in the input text, or -1 if not found.</returns>
        </member>
        <member name="M:ZS.ZSText.Replace(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Replaces occurrences of a specified value in the input text with another value.
            </summary>
            <param name="input">The text to be modified.</param>
            <param name="oldValue">The value to be replaced.</param>
            <param name="newValue">The value to replace with.</param>
            <returns>The modified text with replacements.</returns>
        </member>
        <member name="M:ZS.ZSText.Length(Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Gets the length of the input text.
            </summary>
            <param name="input">The text to measure.</param>
            <returns>The length of the input text.</returns>
        </member>
        <member name="M:ZS.ZSText.Trim(Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Trims leading and trailing whitespace from the input text.
            </summary>
            <param name="input">The text to be trimmed.</param>
            <returns>The trimmed text.</returns>
        </member>
        <member name="M:ZS.ZSText.Split(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Splits the input text into an array of substrings based on a delimiter.
            </summary>
            <param name="input">The text to be split.</param>
            <param name="delimiter">The delimiter to split by.</param>
            <returns>An array of substrings.</returns>
        </member>
        <member name="M:ZS.ZSText.ToCamelCase(Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Converts a string to camelCase format.
            </summary>
            <param name="input">The input text to convert.</param>
            <returns>The input text in camelCase format.</returns>
        </member>
        <member name="M:ZS.ZSText.Reverse(Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Reverses the input text.
            </summary>
            <param name="input">The text to be reversed.</param>
            <returns>The reversed text.</returns>
        </member>
        <member name="M:ZS.ZSText.ToTitleCase(Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Converts the first letter of each word in the input text to uppercase.
            </summary>
            <param name="input">The text to be converted.</param>
            <returns>The converted text with each word's first letter in uppercase.</returns>
        </member>
        <member name="M:ZS.ZSText.StartsWith(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Checks if the input text starts with the specified value.
            </summary>
            <param name="input">The text to check.</param>
            <param name="value">The value to check for.</param>
            <returns>True if the input text starts with the value, otherwise false.</returns>
        </member>
        <member name="M:ZS.ZSText.EndsWith(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Checks if the input text ends with the specified value.
            </summary>
            <param name="input">The text to check.</param>
            <param name="value">The value to check for.</param>
            <returns>True if the input text ends with the value, otherwise false.</returns>
        </member>
        <member name="M:ZS.ZSText.HtmlEncode(Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Encodes the input text into HTML entities.
            </summary>
            <param name="input">The text to be encoded.</param>
            <returns>The HTML-encoded text.</returns>
        </member>
        <member name="M:ZS.ZSText.HtmlDecode(Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Decodes the input text from HTML entities.
            </summary>
            <param name="input">The HTML-encoded text to be decoded.</param>
            <returns>The decoded text.</returns>
        </member>
        <member name="M:ZS.ZSText.UrlEncode(Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Encodes the input text into URL format.
            </summary>
            <param name="input">The text to be URL-encoded.</param>
            <returns>The URL-encoded text.</returns>
        </member>
        <member name="M:ZS.ZSText.UrlDecode(Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Decodes the input text from URL format.
            </summary>
            <param name="input">The URL-encoded text to be decoded.</param>
            <returns>The decoded text.</returns>
        </member>
        <member name="M:ZS.ZSText.CountOccurrences(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Counts the occurrences of a substring within the input text.
            </summary>
            <param name="text">The text to search within.</param>
            <param name="substring">The substring to count.</param>
            <returns>The number of occurrences of the substring in the text.</returns>
        </member>
        <member name="M:ZS.ZSText.StartsWithPrefix(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Checks if the input text starts with the specified prefix.
            </summary>
            <param name="text">The text to check.</param>
            <param name="prefix">The prefix to check against.</param>
            <returns>True if the text starts with the prefix, otherwise false.</returns>
        </member>
        <member name="M:ZS.ZSText.EndsWithSuffix(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Checks if the input text ends with the specified suffix.
            </summary>
            <param name="text">The text to check.</param>
            <param name="suffix">The suffix to check against.</param>
            <returns>True if the text ends with the suffix, otherwise false.</returns>
        </member>
        <member name="P:ZS.ZSText.NewLine">
            <summary>
            Gets the newline character "\n".
            </summary>
        </member>
        <member name="P:ZS.ZSText.Comma">
            <summary>
            Gets the comma character ",".
            </summary>
        </member>
        <member name="P:ZS.ZSText.Tab">
            <summary>
            Gets the tab character "\t".
            </summary>
        </member>
        <member name="P:ZS.ZSText.Colon">
            <summary>
            Gets the colon character ":".
            </summary>
        </member>
        <member name="P:ZS.ZSText.Semicolon">
            <summary>
            Gets the semicolon character ";".
            </summary>
        </member>
        <member name="P:ZS.ZSText.Dash">
            <summary>
            Gets the dash character "-".
            </summary>
        </member>
        <member name="P:ZS.ZSText.Underscore">
            <summary>
            Gets the underscore character "_".
            </summary>
        </member>
        <member name="P:ZS.ZSText.Period">
            <summary>
            Gets the period character ".".
            </summary>
        </member>
        <member name="P:ZS.ZSText.QuestionMark">
            <summary>
            Gets the question mark character "?".
            </summary>
        </member>
        <member name="P:ZS.ZSText.ExclamationMark">
            <summary>
            Gets the exclamation mark character "!".
            </summary>
        </member>
        <member name="P:ZS.ZSText.QuotationMark">
            <summary>
            Gets the quotation mark character '"'.
            </summary>
        </member>
        <member name="P:ZS.ZSText.SingleQuote">
            <summary>
            Gets the single quote character '\''.
            </summary>
        </member>
        <member name="P:ZS.ZSText.ParenthesesOpen">
            <summary>
            Gets the parentheses opening character '('.
            </summary>
        </member>
        <member name="P:ZS.ZSText.ParenthesesClose">
            <summary>
            Gets the parentheses closing character ')'.
            </summary>
        </member>
        <member name="P:ZS.ZSText.BracketOpen">
            <summary>
            Gets the square bracket opening character '['.
            </summary>
        </member>
        <member name="P:ZS.ZSText.BracketClose">
            <summary>
            Gets the square bracket closing character ']'.
            </summary>
        </member>
        <member name="P:ZS.ZSText.BraceOpen">
            <summary>
            Gets the curly brace opening character '{'.
            </summary>
        </member>
        <member name="P:ZS.ZSText.BraceClose">
            <summary>
            Gets the curly brace closing character '}'.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:ZS.ZSText.AngleBracketOpen" -->
        <member name="P:ZS.ZSText.AngleBracketClose">
            <summary>
            Gets the angle bracket closing character '>'.
            </summary>
        </member>
        <member name="T:ZS.ZSDialog">
            <summary>
            Provides various dialog utilities such as message boxes, input dialogs, file dialogs, and color dialogs.
            </summary>
        </member>
        <member name="M:ZS.ZSDialog.ShowMessageBox(Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Shows a message box with the specified text.
            </summary>
            <param name="text">The text to display in the message box.</param>
        </member>
        <member name="M:ZS.ZSDialog.ShowInputDialog(Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Shows a custom input dialog with the specified prompt text.
            </summary>
            <param name="prompt">The prompt text to display in the input dialog.</param>
            <returns>The text entered by the user.</returns>
        </member>
        <member name="M:ZS.ZSDialog.ShowOpenFileDialog">
            <summary>
            Shows a file open dialog and returns the selected file path.
            </summary>
            <returns>The path of the selected file.</returns>
        </member>
        <member name="M:ZS.ZSDialog.ShowSaveFileDialog">
            <summary>
            Shows a file save dialog and returns the selected file path.
            </summary>
            <returns>The path of the file to save.</returns>
        </member>
        <member name="M:ZS.ZSDialog.ShowColorDialog">
            <summary>
            Shows a color dialog and returns the selected color as a string.
            </summary>
            <returns>The selected color in hexadecimal format (e.g., #FF0000 for red).</returns>
        </member>
        <member name="M:ZS.ZSDialog.ShowYesNoDialog(Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Shows a Yes/No dialog with the specified question text.
            </summary>
            <param name="question">The question text to display in the dialog.</param>
            <returns>Returns "Yes" if Yes is clicked, otherwise returns "No".</returns>
        </member>
        <member name="M:ZS.ZSDialog.ShowFolderBrowserDialog">
            <summary>
            Shows a folder browser dialog and returns the selected folder path.
            </summary>
            <returns>The path of the selected folder.</returns>
        </member>
        <member name="M:ZS.ZSDialog.ShowErrorDialog(Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Shows an error dialog with the specified error message.
            </summary>
            <param name="errorMessage">The error message to display in the dialog.</param>
        </member>
        <member name="M:ZS.ZSDialog.ShowWarningDialog(Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Shows a warning dialog with the specified warning message.
            </summary>
            <param name="warningMessage">The warning message to display in the dialog.</param>
        </member>
        <member name="M:ZS.ZSDialog.ShowInformationDialog(Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Shows an information dialog with the specified information message.
            </summary>
            <param name="informationMessage">The information message to display in the dialog.</param>
        </member>
        <member name="M:ZS.ZSDialog.ShowCustomMessageBox(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Shows a custom message box with specified text, title, and buttons.
            </summary>
            <param name="text">The text to display in the message box.</param>
            <param name="title">The title of the message box.</param>
            <param name="buttons">The buttons to display in the message box (OK, OKCancel, YesNo).</param>
            <returns>The text of the button that was clicked.</returns>
        </member>
        <member name="M:ZS.ZSDialog.ShowProgressDialog(Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Shows a progress dialog with a specified message.
            </summary>
            <param name="message">The message to display in the progress dialog.</param>
        </member>
        <member name="M:ZS.ZSDialog.ShowFontDialog">
            <summary>
            Shows a font dialog and returns the selected font as a string.
            </summary>
            <returns>The selected font in the format "FontName, Size, Style".</returns>
        </member>
        <member name="M:ZS.ZSDialog.ShowTimePickerDialog">
            <summary>
            Shows a time picker dialog and returns the selected time.
            </summary>
            <returns>The selected time in the format "HH:mm:ss".</returns>
        </member>
        <member name="M:ZS.ZSDialog.ShowDatePickerDialog">
            <summary>
            Shows a date picker dialog and returns the selected date.
            </summary>
            <returns>The selected date in the format "yyyy-MM-dd".</returns>
        </member>
        <member name="M:ZS.ZSDialog.ShowConfirmationDialog(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Shows a confirmation dialog with specified text and title.
            </summary>
            <param name="text">The text to display in the confirmation dialog.</param>
            <param name="title">The title of the confirmation dialog.</param>
            <returns>Returns true if Yes is clicked, otherwise returns false.</returns>
        </member>
        <member name="M:ZS.ZSDialog.ShowSaveFileDialog(Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Shows a save file dialog and returns the selected file path.
            </summary>
            <param name="filter">The file types filter (e.g., "Text Files|*.txt|All Files|*.*").</param>
            <returns>The path of the selected file or an empty string if canceled.</returns>
        </member>
        <member name="M:ZS.ZSDialog.ShowOpenFileDialog(Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Shows an open file dialog and returns the selected file path.
            </summary>
            <param name="filter">The file types filter (e.g., "Text Files|*.txt|All Files|*.*").</param>
            <returns>The path of the selected file or an empty string if canceled.</returns>
        </member>
        <member name="M:ZS.ZSDialog.ShowCustomColorDialog">
            <summary>
            Shows a color dialog and returns the selected color as a string in the format "R,G,B".
            </summary>
            <returns>The selected color or an empty string if canceled.</returns>
        </member>
        <member name="M:ZS.ZSDialog.ShowMultiSelectOpenFileDialog(Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Shows an open file dialog with multi-select enabled and returns the selected file paths.
            </summary>
            <param name="filter">The file types filter (e.g., "Text Files|*.txt|All Files|*.*").</param>
            <returns>A semicolon-separated list of selected file paths or an empty string if canceled.</returns>
        </member>
        <member name="M:ZS.ZSDialog.ShowMultiLineInputBox(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Shows an input box with a multi-line text box for larger input.
            </summary>
            <param name="prompt">The prompt to display in the input box.</param>
            <param name="title">The title of the input box.</param>
            <returns>The user input or an empty string if canceled.</returns>
        </member>
        <member name="M:ZS.ZSDialog.ShowPasswordInputDialog(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Shows a password input dialog and returns the entered password.
            </summary>
            <param name="prompt">The prompt to display in the input dialog.</param>
            <param name="title">The title of the input dialog.</param>
            <returns>The entered password or an empty string if canceled.</returns>
        </member>
        <member name="M:ZS.ZSDialog.ShowInputDialogWithOptions(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive[])">
            <summary>
            Shows an input dialog with options and returns the selected option.
            </summary>
            <param name="prompt">The prompt to display in the input dialog.</param>
            <param name="title">The title of the input dialog.</param>
            <param name="options">The list of options to choose from.</param>
            <returns>The selected option or an empty string if canceled.</returns>
        </member>
        <member name="M:ZS.ZSDialog.ShowImageFileDialog">
            <summary>
            Shows a file dialog to select an image file and returns the selected file path.
            </summary>
            <returns>The path of the selected image file or an empty string if canceled.</returns>
        </member>
        <member name="T:ZS.ZSUtilities">
            <summary>
            Provides General Utilities For Small Basic.
            </summary>
        </member>
        <member name="M:ZS.ZSUtilities.IsImageInImage(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
            <summary>
            Determines if a sub-image is present within a main image.
            </summary>
            <param name="mainImagePath">The file path of the main image.</param>
            <param name="subImagePath">The file path of the sub-image.</param>
            <returns>True if the sub-image is found within the main image, otherwise false.</returns>
        </member>
    </members>
</doc>
